- name: update apt
  ansible.builtin.package:
    update_cache: yes

- name: install repository requirements
  ansible.builtin.package:
    name:
      - apt-transport-https
    state: present

- name: Download PHP GPG key
  ansible.builtin.get_url:
    url: https://packages.sury.org/php/apt.gpg
    dest: /usr/share/keyrings/deb.sury.org-php.gpg
    mode: '0644'

- name: Add Sury PHP repository
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/php.list
    content: "deb [signed-by=/usr/share/keyrings/deb.sury.org-php.gpg] https://packages.sury.org/php/ {{ ansible_lsb.codename }} main\n"
    mode: '0644'

- name: update apt
  ansible.builtin.package:
    update_cache: yes

- name: install php-fpm
  ansible.builtin.package:
    name:
      - 'php{{ php_version }}-fpm'
      - supervisor
      - git
    state: present

- name: Install php extensions
  ansible.builtin.package:
    name:
      - php{{ php_version }}-mbstring
      - php{{ php_version }}-xml
      - php{{ php_version }}-pgsql
      - php{{ php_version }}-curl
      - php{{ php_version }}-zip
      - php{{ php_version }}-xml
    state: present
  become: yes

- name: restart php-fpm
  ansible.builtin.systemd:
    name: 'php{{ php_version }}-fpm'
    state: restarted

- name: download composer installer
  ansible.builtin.uri:
    url: https://getcomposer.org/installer  vars:
    node_version: "20" 
    dest: /tmp/composer-setup.php
    return_content: true

- name: download composer signature
  ansible.builtin.uri:
    url: https://composer.github.io/installer.sig
    return_content: true
  register: composer_signature

- name: Set HASH variable
  ansible.builtin.set_fact:
    HASH: '{{ composer_signature.content | trim }}'

- name: check the safty of installer
  ansible.builtin.shell: |
    php -r "if (hash_file('SHA384', '/tmp/composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
  args:
    executable: /bin/bash

- name: install composer
  ansible.builtin.shell: |
    php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
  args:
    executable: /bin/bash

- name: generate SSH key
  ansible.builtin.openssh_keypair:
    path: /home/{{ ansible_user }}/.ssh/id_ed25519
    type: ed25519
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    mode: '0600'
  register: ssh_key

- name: Read public key from remote VM
  ansible.builtin.slurp:
    src: '/home/{{ ansible_user }}/.ssh/id_ed25519.pub'
  register: remote_pubkey

- name: Debug SSH public key
  ansible.builtin.debug:
    msg: '{{ remote_pubkey.content | b64decode }}'

- name: Add SSH public key to GitHub
  ansible.builtin.uri:
    url: 'https://api.github.com/user/keys'
    method: POST
    headers:
      Authorization: 'token {{ github_token }}'
      Content-Type: 'application/json'
      Accept: 'application/vnd.github.v3+json'
    body_format: json
    body:
      title: 'Ansible Deployment Key'
      key: '{{ remote_pubkey.content | b64decode }}'
    status_code: 201

- name: clone project
  ansible.builtin.git:
    repo: git@github.com:ar-sharif/laravel_postgresql_replication.git
    dest: '{{ project_path }}'
    key_file: /home/vm/.ssh/id_ed25519
    accept_hostkey: yes
  become: yes
  become_user: vm

- name: Ensure correct ownership for Laravel storage and cache directories
  ansible.builtin.file:
    path: '{{ item }}'
    owner: www-data
    group: www-data
    recurse: yes
    state: directory
  loop:
    - '{{ project_path }}/storage'
    - '{{ project_path }}/bootstrap/cache'
